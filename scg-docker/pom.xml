<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) Telicent Ltd.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <artifactId>docker</artifactId>
  <name>Telicent Smart Cache Graph - Docker Container</name>
  <description>Docker Container preparation for Smart Cache Graph</description>
  <packaging>pom</packaging>

  <parent>
    <groupId>io.telicent.smart-caches.graph</groupId>
    <artifactId>scg-base</artifactId>
    <version>0.81.3</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.outputTimestamp>2024-08-27T11:48:57Z</project.build.outputTimestamp>
  </properties>

  <dependencies>
    <!-- Individual jars, with version information, many jars for the container -->
    <dependency>
      <groupId>io.telicent.smart-caches.graph</groupId>
      <artifactId>scg-system</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>io.opentelemetry.javaagent</groupId>
      <artifactId>opentelemetry-javaagent</artifactId>
      <version>${ver.otel}</version>
      <scope>runtime</scope>
    </dependency>
    
  </dependencies>
  
  <build>
    <plugins>
      <!--
          Copy the necessary dependencies into target/dependency and target/agent (if OTel Agent is enabled)
          The Dockerfile will copy from these locations to build the Docker image
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${ver.plugin.dependency}</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <excludeArtifactIds>opentelemetry-javaagent</excludeArtifactIds>
              <outputDirectory>${project.build.directory}/dependency</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy-otel-agent</id>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <includeArtifactIds>opentelemetry-javaagent</includeArtifactIds>
              <outputDirectory>${project.build.directory}/agents</outputDirectory>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
